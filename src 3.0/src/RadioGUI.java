/**
 Nombre: Marlon Fuentes, Kevin Garcia
 *Carnets: 15240, 
 * Fecha 16/07/16
 * Programa principal aqui se usa la GUI, ademas se implementan los metodos de la radio 
*/
import java.awt.Color;
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Marlon
 */
public class RadioGUI extends javax.swing.JFrame {
   /*
    Se crean los objetos y se descrien las variables
    */
    double emisoraSeleccion [];
    RadioA miRadio = new RadioA();
    int amInicio =530;
    double fmInicio =87.9;
    /**
     * Creates new form RadioGUI
     */
    public RadioGUI() {
        initComponents();
        emisoraSeleccion = new double[12];
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        am = new javax.swing.JButton();
        izquierdaAm = new javax.swing.JButton();
        derechaAm = new javax.swing.JButton();
        izquierdaFm = new javax.swing.JButton();
        derechaFm = new javax.swing.JButton();
        fm = new javax.swing.JButton();
        cargar = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        lista = new javax.swing.JComboBox();
        label2 = new javax.swing.JLabel();
        guardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RadioA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel2.setText("Emisora:");

        am.setText("AM");
        am.setEnabled(false);
        am.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amActionPerformed(evt);
            }
        });

        izquierdaAm.setText("<-");
        izquierdaAm.setEnabled(false);
        izquierdaAm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izquierdaAmActionPerformed(evt);
            }
        });

        derechaAm.setText("->");
        derechaAm.setEnabled(false);
        derechaAm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derechaAmActionPerformed(evt);
            }
        });

        izquierdaFm.setText("<-");
        izquierdaFm.setEnabled(false);
        izquierdaFm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izquierdaFmActionPerformed(evt);
            }
        });

        derechaFm.setText("->");
        derechaFm.setEnabled(false);
        derechaFm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derechaFmActionPerformed(evt);
            }
        });

        fm.setText("FM");
        fm.setEnabled(false);
        fm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmActionPerformed(evt);
            }
        });

        cargar.setForeground(new java.awt.Color(255, 51, 51));
        cargar.setText("Cargar");
        cargar.setEnabled(false);
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });

        jButton16.setText("ON/OFF");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lista.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));
        lista.setEnabled(false);
        lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaActionPerformed(evt);
            }
        });

        label2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(am)
                    .addComponent(jButton16)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fm)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 188, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                        .addGap(44, 44, 44))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(izquierdaFm, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guardar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(derechaFm, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cargar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(izquierdaAm, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(derechaAm, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(am)
                    .addComponent(izquierdaAm)
                    .addComponent(derechaAm))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fm)
                            .addComponent(izquierdaFm)
                            .addComponent(derechaFm))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargar)
                    .addComponent(lista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardar))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void amActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amActionPerformed
        // Aqui se realizan las acciones que se realizaran al presionar el boton AM
        label.setText(String.valueOf(amInicio));
        izquierdaAm.setEnabled(true);
        derechaAm.setEnabled(true);
        izquierdaFm.setEnabled(false);
        derechaFm.setEnabled(false);
        lista.setEnabled(true);
        
      
                
             

    }//GEN-LAST:event_amActionPerformed

    private void izquierdaAmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izquierdaAmActionPerformed
        // Ciclo para mover a la izquierda en la estacion am
        if (amInicio>=530){
            amInicio = amInicio -10;
            label.setText(String.valueOf(amInicio));
         
        }else if(amInicio<530){
            amInicio =1610;
            amInicio = amInicio -10;
            label.setText(String.valueOf(amInicio));
        }
        
    }//GEN-LAST:event_izquierdaAmActionPerformed

    private void derechaAmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derechaAmActionPerformed
        // ciclo para mover a la derecha en la estacion am
                if (amInicio>=530){
            amInicio = amInicio +10;
            label.setText(String.valueOf(amInicio));
         
        }else if(amInicio>530){
            amInicio =1610;
            amInicio = amInicio +10;
            label.setText(String.valueOf(amInicio));
        }
    }//GEN-LAST:event_derechaAmActionPerformed

    private void izquierdaFmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izquierdaFmActionPerformed
        //ciclo para mover hacia la izquierda en la frecuencia fm 
                if (fmInicio>=87.9){
            fmInicio = fmInicio - 0.10 ;
            label.setText(String.valueOf(fmInicio));
        }else if(fmInicio<87.9){
             fmInicio = 107.9;
            fmInicio = fmInicio - 0.10 ;
            label.setText(String.valueOf(fmInicio));
        }
    }//GEN-LAST:event_izquierdaFmActionPerformed

    private void derechaFmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derechaFmActionPerformed
        //ciclo para mover hacia la derecha en la frecuencia am 
                        if (fmInicio>=87.9){
            fmInicio = fmInicio + 0.10 ;
            label.setText(String.valueOf(fmInicio));
        }else if(fmInicio<87.9){
             fmInicio = 107.9;
            fmInicio = fmInicio + 0.10 ;
            label.setText(String.valueOf(fmInicio));
    }//GEN-LAST:event_derechaFmActionPerformed
    }
    private void fmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmActionPerformed
        //Estados que se realizaran cuando se presione el boton fm 
        label.setText(String.valueOf(fmInicio));
        izquierdaAm.setEnabled(false);
        derechaAm.setEnabled(false);
        izquierdaFm.setEnabled(true);
        derechaFm.setEnabled(true);
        lista.setEnabled(true);
        
    }//GEN-LAST:event_fmActionPerformed

    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        // llama la funcion en RADIOA y la usa para cargar la estacion guardada
        int btn = Integer.parseInt(lista.getSelectedItem().toString());
       label.setText(String.valueOf(miRadio.selectEmisora(btn)));
    }//GEN-LAST:event_cargarActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // encendido y apagado
        am.setEnabled(true);
        fm.setEnabled(true);
        cargar.setEnabled(true);
        guardar.setEnabled(true);
       
    }//GEN-LAST:event_jButton16ActionPerformed

    private void listaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // Llama la funcion para guardar en la lista, guarda en la posicion de la JCOMBOBOX
           double emisoraS=Double.parseDouble(label.getText());
           int btn = Integer.parseInt(lista.getSelectedItem().toString());
           miRadio.saveEmisora(btn, emisoraS);
    }//GEN-LAST:event_guardarActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RadioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RadioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RadioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RadioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RadioGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton am;
    private javax.swing.JButton cargar;
    private javax.swing.JButton derechaAm;
    private javax.swing.JButton derechaFm;
    private javax.swing.JButton fm;
    private javax.swing.JButton guardar;
    private javax.swing.JButton izquierdaAm;
    private javax.swing.JButton izquierdaFm;
    private javax.swing.JButton jButton16;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel label;
    private javax.swing.JLabel label2;
    private javax.swing.JComboBox lista;
    // End of variables declaration//GEN-END:variables
}
